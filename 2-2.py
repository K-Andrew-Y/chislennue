import math # импортируем модуль math для математических операций

def f(z): #  определение функции `f`, которая принимает один аргумент `z`
    return 2 * z - 0.5 - math.sin(z + 0.5) # внутри функции мы возвращаем значение выражения. Эта функция будет
    # использоваться для нахождения точки, в которой значение функции равно нулю.

# Задаём интервал и точность вычислений
def main():
    a = 0 # интервал `[0, 1]`, в котором мы будем искать корень функции
    b = 1
    eps = 0.0001 # eps` задает точность вычислений (в данном случае 0.0001)
    n = 0 # `n` — счетчик шагов, который будет увеличиваться с каждой итерацией

    # далее выводим информацию на экран
    print("Каушанский Андрей")
    print("Функция sin(x + 0,5) = 2*x - 0,5")
    print("Интервал X из [%.3f; %.3f]" % (a, b))
    print("Точность вычислений %.4f" % eps)
    print("Метод половинного деления")

    while abs(a - b) >= eps: # цикл `while` продолжается до тех пор, пока разница между `a` и `b` больше или равна `eps`
        c = (a + b) / 2 # вычисляет среднюю точку между `a` и `b`.
        print(c) # выводит текущее значение `c`, которое является проверяемой точкой

        # далее проверяем, находится ли корень в левой части интервала, если функция
        # имеет разные знаки при `c` и `a`. Если это так, правый конец интервала `b` заменяется `c`.
        # В противном случае, левый конец `a` заменяется `c`.
        if f(c) * f(a) <= 0:
            b = c
            print(b)
        else:
            a = c
            print(a)

        n += 1 # n увеличиваем на 1

    print("Число шагов = %d" % n) # программа выводит количество итераций, необходимых для нахождения корня функции.

# далее, эта конструкция позволяет нам запускать функцию `main()` только тогда, когда файл запущен непосредственно,
# а не импортирован как модуль.
if __name__ == "__main__":
    main()