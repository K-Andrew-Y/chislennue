# Вычисление интеграла методом прямоугольников
import math # импортируем модуль math для решения логорифмов

def f(x): # определяем функцию `f(x)`, которая вычисляет квадрат натурального логарифма
    return (math.log(5 * x) ** 2)

# далее функция `m_pryamo` принимает три параметра: a- нижний предел интегрирования;
# b-верхний предел интегрирования; n- количество разбиений (подынтервалов).
def m_pryamo(a, b, n):
    h = (b - a) / n # h вычисляет ширину каждого подынтервала.
    S = 0 # переменная `S` инициализируется для суммирования значений функции.

    for i in range(n - 1): # Цикл `for` проходит по всем подынтервалам,
        # вычисляя значение функции в каждой точке
        x = a + i * h
        S += f(x) # значение функции добавляется к `S`.
    S *= h # после завершения цикла `S` умножается на ширину подынтервала `h`,
    # чтобы получить приблизительное значение интеграла.
    return S

# далее вывод информации на экран
def main():
    print("Каушанский Андрей")
    print("Вычисление интеграла методом прямоугольников")
    print("Подинтегральное выражение:")
    print("ln^2(5*x)")
    print("Нижний предел интегрирования: 1")
    print("Верхний предел интегрирования: 100")
    print("Значение интеграла число разбиений")

    # Затем в цикле от 100 до 20 000 с шагом 1000 вычисляется значение интеграла для различных количеств разбиений,
    # используя функцию `m_pryamo. Результаты выводятся в формате с 4 знаками после запятой.
    for i in range(100, 20001, 1000):
        y = m_pryamo(1, 100, i)
        print(f"   {y:.4f}         {i}")

if __name__ == "__main__":
    main()