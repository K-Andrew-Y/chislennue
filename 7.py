# Вычисление интеграла - метод трапеции
import math # Импортируется модуль `math` для использования математических функций


def f(x): # Функция `f(x)` вычисляет значение логарифма в квадрате
    return (math.log(5 * x) ** 2)

def m_trapezia(a, b, n): # функция реализует метод трапеций для численного интегрирования.

    # h — ширина одного подотрезка
    h = (b - a) / n     # a и b — это нижний и верхний пределы интегрирования, n — количество подотрезков.
    S = 0
    for i in range(n): #  внутри цикла вычисляется площадь трапеции, используя значения функции `f(x1)` и `f(x2)`,
        # соответствующие концам подотрезка.
        x1 = a + i * h
        x2 = a + (i + 1) * h
        S += 0.5 * (x2 - x1) * (f(x1) + f(x2))
    return S

def main(): # В функции `main()` выполнен расчет интеграла для заданного диапазона разбиений
    print("Каушанский Андрей")
    print("Вычисление интеграла методом трапеции")
    print("Подинтегральное выражение:")
    print("ln^2(5*x)")
    print("Нижний предел интегрирования: 1")
    print("Верхний предел интегрирования: 100")
    print("Значение интеграла число разбиений")

    # далее в цикле от 1 до 1401 (с шагом 100) для каждого значения `i`, представляющего количество разбиений,
    # вычисляет интеграл методом трапеции.
    for i in range(1, 1402, 100): # # range не включает верхнюю границу, поэтому диапазон заканчивается
        # на 1402 для того, чтобы включить 1401
        y = m_trapezia(1, 100, i) # Задает нижний (1) и верхний (100) пределы интегрирования.
        print(f"{y:.4f} {i}")

if __name__ == '__main__':# конструкция для выполнения основного кода
    main()